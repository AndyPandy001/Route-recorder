<!DOCTYPE html><html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Route Tracker</title>
  <style>
    body {
      font-family: sans-serif;
      padding: 20px;
      background: #f0f0f0;
      text-align: center;
    }
    button {
      font-size: 1.5rem;
      padding: 20px;
      margin: 10px;
      width: 90%;
      max-width: 400px;
    }
    #stops {
      margin-top: 20px;
    }
    input {
      padding: 10px;
      font-size: 1rem;
      width: 90%;
      max-width: 400px;
    }
    .saved-route {
      margin: 10px 0;
    }
  </style>
</head>
<body>
  <h1>Route Tracker</h1>
  <button onclick="startRoute()">Start Route</button>
  <button onclick="addStop()">Add Stop</button>
  <button onclick="endRoute()">End Route & Save</button>  <div id="stops"></div>
  <div id="saveSection" style="display:none;">
    <input type="text" id="routeName" placeholder="Enter route name..." />
    <button onclick="saveRoute()">Save Route</button>
  </div>  <h2>Saved Routes</h2>
  <div id="savedRoutes"></div>  <script>
    let tracking = false;
    let stops = [];

    function startRoute() {
      tracking = true;
      stops = [];
      document.getElementById('stops').innerHTML = '<h3>Route Started</h3>';
    }

    function addStop() {
      if (!tracking) {
        alert("Please start the route first.");
        return;
      }
      navigator.geolocation.getCurrentPosition(pos => {
        const { latitude, longitude } = pos.coords;
        stops.push({ lat: latitude, lng: longitude });
        const stopNum = stops.length;
        const el = document.createElement("div");
        el.textContent = `Stop ${stopNum}: (${latitude.toFixed(5)}, ${longitude.toFixed(5)})`;
        document.getElementById("stops").appendChild(el);
      }, () => alert("Location access denied or unavailable."));
    }

    function endRoute() {
      if (stops.length < 2) {
        alert("Add at least two stops before ending the route.");
        return;
      }
      document.getElementById("saveSection").style.display = 'block';
    }

    function saveRoute() {
      const name = document.getElementById("routeName").value.trim();
      if (!name) {
        alert("Please enter a route name.");
        return;
      }
      const baseUrl = "https://www.google.com/maps/dir/";
      const url = baseUrl + stops.map(s => `${s.lat},${s.lng}`).join("/");
      const savedRoutes = JSON.parse(localStorage.getItem("routes") || "[]");
      savedRoutes.push({ name, url });
      localStorage.setItem("routes", JSON.stringify(savedRoutes));
      document.getElementById("routeName").value = "";
      document.getElementById("saveSection").style.display = 'none';
      loadSavedRoutes();
    }

    function loadSavedRoutes() {
      const container = document.getElementById("savedRoutes");
      container.innerHTML = "";
      const savedRoutes = JSON.parse(localStorage.getItem("routes") || "[]");
      savedRoutes.forEach(route => {
        const div = document.createElement("div");
        div.className = "saved-route";
        div.innerHTML = `<strong>${route.name}</strong><br/><a href="${route.url}" target="_blank">Open in Google Maps</a>`;
        container.appendChild(div);
      });
    }

    loadSavedRoutes();
  </script></body>
</html>
